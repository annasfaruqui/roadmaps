[
    {
        "Strategy": "Basic Authentication",
        "Description": "Basic Authentication is a simple authentication method where the user's credentials (username and password) are sent in the request header. It's easy to implement but less secure.",
        "Resource": "https://roadmap.sh/guides/basic-authentication"
    },
    {
        "Strategy": "Session Based Authentication",
        "Description": "Session-Based Authentication involves creating and managing user sessions on the server. It's commonly used in web applications to track user login status.",
        "Resource": "https://roadmap.sh/guides/session-authentication"
    },
    {
        "Strategy": "Token Based Authentication",
        "Description": "Token-Based Authentication uses tokens (usually JWTs) for user authentication. It's widely used for securing APIs and single-page applications.",
        "Resource": "https://roadmap.sh/guides/token-authentication"
    },
    {
        "Strategy": "JWT Authentication",
        "Description": "JWT Authentication (JSON Web Token) is a popular token-based authentication method that is self-contained and includes user claims. It's commonly used in modern web applications.",
        "Resource": "https://roadmap.sh/guides/jwt-authentication"
    },
    {
        "Strategy": "OAuth",
        "Description": "OAuth is an authentication and authorization framework often used for allowing third-party applications to access a user's data without exposing their credentials. It's commonly used for social login.",
        "Resource": "https://roadmap.sh/guides/oauth"
    },
    {
        "Strategy": "SSO - Single Sign-On",
        "Description": "Single Sign-On (SSO) is an authentication process that allows a user to access multiple applications with a single set of login credentials. It enhances user convenience and security.",
        "Resource": "https://roadmap.sh/guides/sso"
    }
]
